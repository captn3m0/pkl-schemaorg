module org.schema.experimental
import "package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.uri@1.0.3#/URI.pkl" as URL
import "CreativeWork.pkl"
/// A software application.
///
/// See: <https://schema.org/SoftwareApplication>
/// Model depth: 3
open class SoftwareApplication extends CreativeWork.CreativeWork {
        
    /// Software application help.
    softwareHelp: (Listing<String>|String)?
        
    /// Component dependency requirements for application. This includes runtime environments
    /// and shared libraries that are not included in the application distribution package,
    /// but required to run the application (examples: DirectX, Java or .NET runtime).
    softwareRequirements: (Listing<URL|String>|URL|String)?
        
    /// Operating systems supported (Windows 7, OS X 10.6, Android 1.6).
    operatingSystem: (Listing<String>|String)?
        
    /// Device required to run the application. Used in cases where a specific make/model is
    /// required to run the application.
    device: (Listing<String>|String)?
        
    /// If the file can be downloaded, URL to download the binary.
    downloadUrl: (Listing<URL|String>|URL|String)?
        
    /// Additional content for a software application.
    softwareAddOn: (Listing<SoftwareApplication|String>|SoftwareApplication|String)?
        
    /// Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB
    /// will be assumed.
    fileSize: (Listing<String>|String)?
        
    /// URL at which the app may be installed, if different from the URL of the item.
    installUrl: (Listing<URL|String>|URL|String)?
        
    /// Supporting data for a SoftwareApplication.
    supportingData: (Listing<String>|String)?
        
    /// Subcategory of the application, e.g. 'Arcade Game'.
    applicationSubCategory: (Listing<URL|String>|URL|String)?
        
    /// Storage requirements (free space required).
    storageRequirements: (Listing<URL|String>|URL|String)?
        
    /// The name of the application suite to which the application belongs (e.g. Excel belongs
    /// to Office).
    applicationSuite: (Listing<String>|String)?
        
    /// Permission(s) required to run the app (for example, a mobile app may require full internet
    /// access or may run only on wifi).
    permissions: (Listing<String>|String)?
        
    /// Component dependency requirements for application. This includes runtime environments
    /// and shared libraries that are not included in the application distribution package,
    /// but required to run the application (examples: DirectX, Java or .NET runtime).
    requirements: (Listing<URL|String>|URL|String)?
        
    /// Countries for which the application is supported. You can also provide the two-letter
    /// ISO 3166-1 alpha-2 country code.
    countriesSupported: (Listing<String>|String)?
        
    /// Countries for which the application is not supported. You can also provide the two-letter
    /// ISO 3166-1 alpha-2 country code.
    countriesNotSupported: (Listing<String>|String)?
        
    /// Type of software application, e.g. 'Game, Multimedia'.
    applicationCategory: (Listing<URL|String>|URL|String)?
        
    /// A link to a screenshot image of the app.
    screenshot: (Listing<URL|String>|URL|String)?
        
    /// Description of what changed in this version.
    releaseNotes: (Listing<URL|String>|URL|String)?
        
    /// Features or modules provided by this application (and possibly required by other applications).
    featureList: (Listing<URL|String>|URL|String)?
        
    /// Version of the software instance.
    softwareVersion: (Listing<String>|String)?
        
    /// Minimum memory requirements.
    memoryRequirements: (Listing<URL|String>|URL|String)?
        
    /// Processor architecture required to run the application (e.g. IA64).
    processorRequirements: (Listing<String>|String)?
        
    /// Device required to run the application. Used in cases where a specific make/model is
    /// required to run the application.
    availableOnDevice: (Listing<String>|String)?
    
}