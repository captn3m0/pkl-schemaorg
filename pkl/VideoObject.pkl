module org.schema.experimental
import "package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.uri@1.0.3#/URI.pkl" as URL
import "MediaObject.pkl"
/// A video file.
///
/// See: <https://schema.org/VideoObject>
/// Model depth: 4
open class VideoObject extends MediaObject.MediaObject {
        
    /// The quality of the video.
    videoQuality: (Listing<String>|String)?
        
    /// An actor, e.g. in TV, radio, movie, video games etc. Actors can be associated with individual
    /// items or with a series, episode, clip.
    actors: (Listing<String>|String)?
        
    /// An actor, e.g. in TV, radio, movie, video games etc., or in an event. Actors can be associated
    /// with individual items or with a series, episode, clip.
    actor: (Listing<String>|String)?
        
    /// A director of e.g. TV, radio, movie, video gaming etc. content, or of an event. Directors
    /// can be associated with individual items or with a series, episode, clip.
    director: (Listing<String>|String)?
        
    /// The composer of the soundtrack.
    musicBy: (Listing<String>|String)?
        
    /// A director of e.g. TV, radio, movie, video games etc. content. Directors can be associated
    /// with individual items or with a series, episode, clip.
    directors: (Listing<String>|String)?
        
    /// The caption for this object. For downloadable machine formats (closed caption, subtitles
    /// etc.) use MediaObject and indicate the [[encodingFormat]].
    caption: (Listing<String>|String)?
        
    /// If this MediaObject is an AudioObject or VideoObject, the transcript of that object.
    transcript: (Listing<String>|String)?
        
    /// Represents textual captioning from a [[MediaObject]], e.g. text of a 'meme'.
    embeddedTextCaption: (Listing<String>|String)?
        
    /// The frame size of the video.
    videoFrameSize: (Listing<String>|String)?
    
}